@*@using Agence_Practical_Test.Models;
@model List<ConDesemConsultorRel>

@{
    var c = Model.Count();
}
@{
    List<string> xValues = new List<string>();
    List<float> yValues = new List<float>();

    var myCharty = new Chart(width: 600, height: 400, theme: "<Chart BackColor=\"#756a6a\" BackGradientStyle=\"TopBottom\" BorderColor=\"64, 64, 64\" BorderWidth=\"2\" BorderlineDashStyle=\"Solid\" Palette=\"EarthTones\" AntiAliasing=\"All\">\r\n    <ChartAreas>\r\n        <ChartArea Name=\"Default\" _Template_=\"All\" BackColor=\"Transparent\" BackSecondaryColor=\"White\" BorderColor=\"64, 64, 64, 64\" BorderDashStyle=\"Solid\" ShadowColor=\"Transparent\">\r\n            <Area3DStyle LightStyle=\"Realistic\" Enable3D=\"True\" Inclination=\"10\" IsClustered=\"True\" IsRightAngleAxes=\"False\" Perspective=\"0\" Rotation=\"15\" WallWidth=\"1\" />\r\n        </ChartArea>\r\n    </ChartAreas>\r\n    <Legends>\r\n        <Legend _Template_=\"All\" BackColor=\"Transparent\" Font=\"Trebuchet MS, 8.25pt, style=Bold\" IsTextAutoFit=\"True\" /> \r\n    </Legends>\r\n    </Chart>");
    foreach (var item in Model)
    {
        myCharty.AddSeries(name: item.Name, xValue: item.Values.Select<ConDesemConsultorValue, string>(x => x.Periodo).ToList(), yValues: item.Values.Select<ConDesemConsultorValue, float>(x => x.ReceitaLiquida).ToList());
        xValues.AddRange(item.Values.Select<ConDesemConsultorValue, string>(x => x.Periodo).ToList().Where(v => xValues.Count(xv => xv == v) == 0));
    }

    var temp = Model.Select<ConDesemConsultorRel, List<ConDesemConsultorValue>>(x => x.Values).ToList();
    foreach (var item in xValues)
    {
        yValues.Add(Model.Select<ConDesemConsultorRel, float>(x => x.Values.Where(v => v.Periodo == item).FirstOrDefault() == null ? 0f : x.Values.Where(v => v.Periodo == item).FirstOrDefault().CustoFixo).ToList().Sum() / Model.Count());
    }
    myCharty.AddSeries(chartType: (xValues.Count == 1 ? "Point" : "Line"), name: "Custo Fixo Médio", xValue: xValues, yValues: yValues);

    myCharty.AddLegend();
    var range = xValues.Count == 0 ? "" : (xValues.Count == 1 ? xValues.First() : $"{xValues.First()} a {xValues.Last()} ");
    myCharty.AddTitle($"Performance Comerce \n\r {range}");
    myCharty.Write();
}*@